package com.ram.olx.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ram.olx.entity.Users;
import com.ram.olx.repository.UserRepository;

@Service
public class UserServiceImpl implements UserService 
{
	private static final Logger log = LoggerFactory.getLogger(UserServiceImpl.class);

	@Autowired
	UserRepository userRepository;

	@Autowired
	AuthTokenService authService;

	@Override
	public String loginUser(OlxUserDetail userDetail) 
	{
		log.info("returing auth token for " + userDetail);
		String token=authService.generateToken(userDetail);
		return token;
	}

	@Override
	public boolean logout(String authToken)
	{
		log.info(authToken +  " logged out");
		return true;
	}

	@Override
	public Users registerUser(Users user)
	{
		// use repository to add a new user to the database
		return null;

	}

	@Override
	public Users getUser(String authToken)
	{
		String username = getUserName(authToken);
		List<Users> list=usersRepository.findByUsername(username);
		return list.size()>0? list.get(0) : null;
	}

	private String getUserName(String authToken)
	{
		return authToken.substring("Auth-Token-".length());
	}

	@Override
	public boolean validateToken(String authToken)
	{
		log.info("validating " + authToken);
		return true;
	}

	@Override
	public Users findByUserName(String username) 
	{
		List<Users> allusers=userRepository.findByUsername(username);
		log.info("user in service " + allusers);
		if(allusers.size()>0)
			return allusers.get(0);
		else return null;
	}

	@Override
	public List<Users> findAll() 
	{
		return userRepository.findAll();
	}

}